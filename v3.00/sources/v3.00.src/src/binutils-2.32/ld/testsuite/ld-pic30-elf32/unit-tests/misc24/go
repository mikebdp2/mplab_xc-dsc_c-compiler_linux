#! /bin/sh

#
# CONFIGURATION SECTION
#
if [ -z "$PIC30_CD" ]; then
    echo "Environmental variable PIC30_CD must be set up.";
    exit 1;
fi

if [ -z "$MDB" ]; then
    echo "Environmental variable MDB must be set up.";
    exit 1;
fi

GAS30="$PIC30_CD/bin/xc16-as -omf=elf -W"
GCC30="$PIC30_CD/bin/xc16-gcc -omf=elf"
OBJDUMP="$PIC30_CD/bin/xc16-objdump -omf=elf"

#
# END CONFIGURATION
#

# process args
vflag=off
while [ $# -gt 0 ]
do
    case "$1" in
        -v)  vflag=on;;
    esac
    shift
done

rm -f t1.o
OPTS="-o t1.o t1.s"
$GAS30 $OPTS
err=$?
if [ $vflag = "on" ]; then
    echo
    echo "$GAS30 $OPTS"
    echo $err
fi

rm -f t2.o
OPTS="-o t2.o t2.s"
$GAS30 $OPTS
err=$?
if [ $vflag = "on" ]; then
    echo
    echo "$GAS30 $OPTS"
    echo $err
fi

rm -f t.exe
OPTS="-o t.exe t1.o t2.o -Wl,--no-pack-data"
$GCC30 $OPTS || exit 99
err=$?
if [ $vflag = "on" ]; then
    echo
    echo "$GCC30 $OPTS"
    echo $err
fi

rm -rf UartOut.txt sim.out
$MDB run.cmd > sim.out 2>&1

rm -f test.out
err=$?
if [ $vflag = "on" ]; then
    echo
    echo "$MDB run.cmd"
    echo $err
fi

{
echo
echo  ">>Simulator Output:"
echo
} > test.out
cat UartOut.txt >> test.out
#rm -f UartOut.txt

echo
echo `head -1 info.txt`

if [ $vflag = "on" ]; then
    echo
    cat test.out
fi

if [ $vflag = "on" ]; then
    diff -b -B test.out expect.out
else
    diff -b -B test.out expect.out > /dev/null
fi


if [ $? -ne 0 ]; then
    echo "ERRORs Detected!!"
    echo
    exit 199
fi

echo "All Tests Pass"
echo
exit 0
