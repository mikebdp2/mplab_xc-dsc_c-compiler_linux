#! /bin/sh

#
# CONFIGURATION SECTION
#
if [ -z "$PIC30_CD" ]; then
    echo "Environmental variable PIC30_CD must be set up.";
    exit 1;
fi

if [ -z "$MDB" ]; then
    echo "Environmental variable MDB must be set up.";
    exit 1;
fi

#
# To change target device: update run.cmd, GLDPATH, and SCRIPT
#
cat >run.cmd <<EOF
device dsPIC30F6014
hwtool sim
set uart1io.uartioenabled true
set uart1io.output file
set uart1io.outputfile "UartOut.txt"
program "t.exe"
run
wait 30000
quit
EOF

GAS30="$PIC30_CD/bin/xc16-as -omf=elf -W"
GCC30="$PIC30_CD/bin/xc16-gcc -omf=elf"
OBJDUMP="$PIC30_CD/bin/xc16-objdump -omf=elf"

SCRIPT=p30F6014.gld
#SCRIPT=p33FJ256MC710.gld
#SCRIPT=p33EP512GM710.gld

LINK_OPTS="-T $SCRIPT -Wl,--pack-data,-Map=t.map" 

#
# END CONFIGURATION
#

# process args
vflag=off
while [ $# -gt 0 ]
do
    case "$1" in
        -v)  vflag=on;;
    esac
    shift
done

rm -f t1.o
$GAS30 -o t1.o t1.s
err=$?
if [ $vflag = "on" ]; then
    echo
    echo "$GAS30 -o t1.o t1.s"
    echo $err
fi

rm -f t2.o
$GAS30 -o t2.o t2.s
err=$?
if [ $vflag = "on" ]; then
    echo
    echo "$GAS30 -o t2.o t2.s"
    echo $err
fi

rm -f t.exe
$GCC30 -o t.exe t1.o t2.o $LINK_OPTS || exit 99
err=$?
if [ $vflag = "on" ]; then
    echo
    echo "$GCC30 -o t.exe t1.o t2.o $LINK_OPTS"
    echo $err
fi

rm -f test.out sim.out
$MDB run.cmd >sim.out 2>&1
err=$?
if [ $vflag = "on" ]; then
    echo
    echo "$MDB run.cmd >sim.out 2>&1"
    echo $err
fi

#remove the first column (addresses that might change)
cut -d ' ' -f 2 UartOut.txt > test.out
rm -f UartOut.txt

if [ $vflag = "on" ]; then
    echo
    cat test.out
fi

echo
echo `head -1 info.txt`

if [ $vflag = "on" ]; then
    diff -b -B test.out expect.out
else
    diff -b -B test.out expect.out > /dev/null
fi


if [ $? -ne 0 ]; then
    echo "ERRORs Detected!!"
    echo
    exit 199
fi

rm -f run.cmd
echo "All Tests Pass"
echo
exit 0
